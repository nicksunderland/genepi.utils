[{"path":"https://nicksunderland.github.io/genepi.utils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 genepi.utils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/chrpos_to_rsid.html","id":"available-builds","dir":"Articles","previous_headings":"","what":"Available builds","title":"CHR:POS to RSID mapping","text":"Currently latest dbSNP build 156 available hg37 hg38.","code":"which_dbsnp_builds()"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/chrpos_to_rsid.html","id":"monitoring-progress","dir":"Articles","previous_headings":"","what":"Monitoring progress","title":"CHR:POS to RSID mapping","text":"mapping can take time, depending number cores machine. monitor progress use form . need wrap function progressr::with_progress({  }).","code":"progressr::with_progress({      gwas_with_rsids <- genepi.utils::chrpos_to_rsid(gwas,                                                   chr_col = \"chromosome\",                                                   pos_col = \"base_pair_location\",                                                   ea_col  = \"effect_allele\",                                                   nea_col = \"other_allele\",                                                   build   = \"b37_dbsnp156\")  })  # Chromosomes to process:  10 # |=================                                                                    |  12%"},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/articles/chrpos_to_rsid.html","id":"alt-rsid-output","dir":"Articles","previous_headings":"Function options","what":"Alt RSID output","title":"CHR:POS to RSID mapping","text":"dbSNP database multiple RSID assigned CHR:POS:REF:ALT combination. function return first RSID encountered filter rest. want get alternative RSIDs use alt_rsids=TRUE flag. change structure output named list() two data.table elements: 1) “data”=gwas_data 2) “alt_rsids”=alt_rsid_data.","code":"gwas_with_rsids <- genepi.utils::chrpos_to_rsid(gwas,                                                 chr_col = \"chromosome\",                                                 pos_col = \"base_pair_location\",                                                 ea_col  = \"effect_allele\",                                                 nea_col = \"other_allele\",                                                 build   = \"b37_dbsnp156\",                                                  alt_rsids=TRUE)  str(gwas_with_rsids)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/chrpos_to_rsid.html","id":"allele-specification-matching","dir":"Articles","previous_headings":"Function options","what":"Allele specification / matching","title":"CHR:POS to RSID mapping","text":"Although matching alleles desirable, especially indels, can still match just chromosome position either leaving ea_col nea_col arguments , setting NULL. Alleles always aligned reference allow allele flipping default parameter flip=\"allow\". like flag variants assigned rsID based flipped alleles use flip=\"report\"; add logical column output called rsid_flip_match. prevent allele flipping assign based reference allele orientation use flip=\"no_flip\". Coding indels D/allowed, however please check alternate rsID output mutliple rsIDs (indels) may present D/coding particular base position.","code":"gwas_with_rsids <- genepi.utils::chrpos_to_rsid(gwas,                                                 chr_col = \"chromosome\",                                                 pos_col = \"base_pair_location\",                                                 build   = \"b37_dbsnp156\")  str(gwas_with_rsids) gwas_with_rsids <- genepi.utils::chrpos_to_rsid(gwas,                                                 chr_col = \"chromosome\",                                                 pos_col = \"base_pair_location\",                                                 ea_col  = \"effect_allele\",                                                 nea_col = \"other_allele\",                                                 flip    = \"report\",                                                 build   = \"b37_dbsnp156\")  str(gwas_with_rsids) gwas_id_coding <- data.table::fread(system.file(\"extdata\", \"example3_gwas_sumstats.tsv\", package=\"genepi.utils\"))  gwas_with_rsids <- genepi.utils::chrpos_to_rsid(dt      = gwas_id_coding,                                                 chr_col = \"chromosome\",                                                 pos_col = \"base_pair_location\",                                                 ea_col  = \"effect_allele\",                                                 nea_col = \"other_allele\",                                                 flip    = \"allow\",                                                 build   = \"b37_dbsnp156\",                                                  alt_rsids=TRUE)  str(gwas_with_rsids)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/chrpos_to_rsid.html","id":"evaluation-speed","dir":"Articles","previous_headings":"","what":"Evaluation speed","title":"CHR:POS to RSID mapping","text":"choice parameters small impact computation speed. Since dbSNP data stored .fst binary files desired rows / columns ever read memory, data requested slower computation. said, still much faster / feasible trying read entire dbSNP database (1 billion rsIDs).","code":"library(microbenchmark) library(ggplot2)  # some GWAS data dt <- data.table::fread( gwas_sumstats_4.3million_rows )  # benchmarking mbm <- microbenchmark(\"chrpos_to_rsid: no alleles, no alt rsids\" = {                               progressr::with_progress({                                 genepi.utils::chrpos_to_rsid(dt,                                                              chr_col=\"CHR\",                                                              pos_col=\"POS\",                                                              ea_col=NULL,                                                              nea_col=NULL,                                                              build=\"b37_dbsnp156\",                                                              alt_rsids=FALSE,                                                              flip=\"report\")                               })                         },                       \"chrpos_to_rsid: no alleles, with alt rsids\" = {                         progressr::with_progress({                           genepi.utils::chrpos_to_rsid(dt,                                                        chr_col=\"CHR\",                                                        pos_col=\"POS\",                                                        ea_col=NULL,                                                        nea_col=NULL,                                                        build=\"b37_dbsnp156\",                                                        alt_rsids=TRUE,                                                        flip=\"report\")                         })                       },                       \"chrpos_to_rsid: with alleles, no alt rsids\" = {                         progressr::with_progress({                           genepi.utils::chrpos_to_rsid(dt,                                                        chr_col=\"CHR\",                                                        pos_col=\"POS\",                                                        ea_col=\"EFFECT_ALLELE\",                                                        nea_col=\"OTHER_ALLELE\",                                                        build=\"b37_dbsnp156\",                                                        alt_rsids=FALSE,                                                        flip=\"report\")                         })                       },                       \"chrpos_to_rsid: with alleles, with alt rsids\" = {                         progressr::with_progress({                           genepi.utils::chrpos_to_rsid(dt,                                                        chr_col=\"CHR\",                                                        pos_col=\"POS\",                                                        ea_col=\"EFFECT_ALLELE\",                                                        nea_col=\"OTHER_ALLELE\",                                                        build=\"b37_dbsnp156\",                                                        alt_rsids=TRUE,                                                        flip=\"report\")                         })                       },                       times = 10L)  # plot autoplot(mbm)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/clumping.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Clumping","text":"Clumping GWAS results aims retain independent variants, accounting linkage disequilibrium (highly correlated signals). clump() function uses PLINK2 background requires genome reference dataset linkage disequilibrium information. reference must contain variant IDs GWAS results. recommended first annotate GWAS rsIDs - can achieved chrpos_to_rsid() function data already annotated. data also expected genepi.utils standard form, run standardise_gwas() needed. standardisation rsID annotation can also performed one step standardise_gwas() function, passing appropriate populate_rsid argument. common reference dataset 1000 genomes phase 3 can downloaded PLINK (https://www.cog-genomics.org/plink/2.0/resources#phase3_1kg). Important: use different dataset ensure IDs match dataset). ready PLINK2 pfiles use clumping can run following, appear duplicate rsIDs dataset PLINK2 like. path processed reference files (path//plink_ref/all_phase3_nodup) can directly passed clump() function plink_ref argument, , can configure path package using set_1000G_reference() - needs done per install. currently set reference path can queried which_1000G_reference(). need PLINK2 installed computer. clump() function takes path plink executable plink2 argument. Alternatively, can configure path package using set_plink2() - needs done per install. currently set PLINK2 path can queried which_plink2(). plink2 argument set NULL function attempt call plink directly, equivalent running plink2 --options directly command line.","code":"plink2 \\   --pfile all_phase3 \\   --rm-dup force-first \\   --make-pgen \\   --out all_phase3_nodup library(genepi.utils)  # the gwas data gwas <- GWAS(dat=system.file(\"extdata\", \"example2_gwas_sumstats.tsv\", package=\"genepi.utils\"), map=\"ns_map\", fill_rsid=\"b37_dbsnp156\") gwas <- as.data.table(gwas)   # check path to reference which_1000G_reference()  # check path to plink2 executable which_plink2()"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/clumping.html","id":"clumping","dir":"Articles","previous_headings":"","what":"Clumping","title":"Clumping","text":"Running clumping procedure annotate GWAS two columns: index: logical column indicating whether variant index/lead variant. want clumped/index SNPs filter e.g. gwas[index==TRUE, ] clump: integer column indicating clump variant belongs .","code":"# input gwas; n.b. trailing `[]` just for printing in rmarkdown gwas[]  # run clumping clumped_gwas <- clump(gwas,                        p1 = 1.0,                       p2 = 1.0,                        r2 = 0.1,                        kb = 250,                        plink2    = which_plink2(),                        plink_ref = which_1000G_reference(build=\"GRCh37\"),                        parallel_cores = 4)  # view result clumped_gwas[]"},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"background","dir":"Articles","previous_headings":"Slope-hunter","what":"Background","title":"Collider bias","text":"Run SlopeHunter expectation-maximization method estimate bias adjustment factor. algorithm uses model-based clustering proposes distributions incidence(GI) progression (GP) BETAs. Cluster 1: SNPs cause incidence progression (red) Cluster 2: SNPs cause incidence progression (blue) Cluster 3: SNPs cause progression incidence (gray) Cluster 4: SNPs cause neither incidence progression (gray) first thing note can filter SNPs cluster 3 4 including SNPs significant association (P-value) incidence - ip parameter. problem reduced finding two clusters best fit distributions 1 2 equation . SlopeHunter EM algorithm iteratively determines SNPs belong distribution complete adjustment factor (slope gradient) can determined group 1, .e. SNPs thought solely cause incidence. function’s code adapted SlopeHunter R package using method SlopeHunter package referenced original source.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"run","dir":"Articles","previous_headings":"Slope-hunter","what":"Run","title":"Collider bias","text":"Running Slope-hunter algorithm requires initialising parameters. ip initial p-value filter incident GWA variants. Variants p-value greater ip removed analysis (.e. variants clusters 3 & 4). pi0 initial guess proportion variants associate incidence (.e. belong cluster 1). sxy1 initial guess covariance incidence progression betas cluster 2. standard error slope estimated bootstrapping, 100 samples case .","code":"result <- slopehunter(gwas_i     = gwas_clumped_incidence,                       gwas_p     = gwas_progression,                       merge      = c(\"CHR\"=\"CHR\", \"BP\"=\"BP\"),                        ip         = 0.001,                       pi0        = 0.6,                       sxy1       = 1e-5,                       bootstraps = 0)  str(result)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"visualise","dir":"Articles","previous_headings":"Slope-hunter","what":"Visualise","title":"Collider bias","text":"can visualise iterative EM algorithm like . variants allocated either cluster 1 (incidence ) cluster 2 (incidence progression) based well conform defined bivariate distributions cluster. key point incidence-distribution linear relationship incidence progression betas, constant term - .e. search straight line passing origin. iteration distribution parameters recalculated (variance / s.dev / cov) variant reassigned either cluster 1 2, model converges.","code":"p <- plot_slopehunter_iters(gwas_i = gwas_clumped_incidence,                             gwas_p = gwas_progression,                             ip     = 0.001,                             pi0    = 0.6,                             sxy1   = 1e-5,                             x_lims = c(-0.2, 0.2),                              y_lims = c(-0.5, 0.5))  p"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"the-b-slope","dir":"Articles","previous_headings":"","what":"The b-slope","title":"Collider bias","text":"expectation (E) part Slope-hunter algorithm initially set covariance matrix first component. -diagonal components set sxy0 = sx0*sy0*dir0*0.95 sx0 sy0 standard deviations incidence progression betas, respectively, dir0 term sign() covariance - positive case: Cov(incidence, progression) maximisation (M) step algorithm, update dir0 sign() sum(pt*xbeta*ybeta)/sum(pt). pt positive array sign depends relative proportions negatives positive product xbeta ybeta. positive case, visualised histogram: product(incidence, progression) effect, believe, positive slope maintained iteration algorithm.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"overall-assessment---multiple-methods","dir":"Articles","previous_headings":"","what":"Overall assessment - multiple methods","title":"Collider bias","text":"algorithms can sensitive incidence p-value threshold ip. high null variants without effect incidence included. low variants small, potentially significant, effects incidence removed. good idea investigate stability adjustment factor estimate difference ip threshold. can run many combinations analyses defining sets/vectors parameters. Note: careful large numbers parameters quickly lead large numbers combinations. e.g.  methods = c(“slopehunter”) ip = c(0.05,0.001,0.00001) pi0 = c(0.6, 0.65, 0.7). sxy1 = c(1e-5, 1e-4, 1e-3) …lead 27 separate analyses. can use analyse_collider_bias() function run combinations methods parameters. stability b-slope different p-values (ip).  Plotted another way plot_correction_stability().","code":"results <- analyse_collider_bias(gwas_i = gwas_clumped_incidence,                                  gwas_p = gwas_progression,                                  merge  = c(\"CHR\"=\"CHR\", \"BP\"=\"BP\"),                                  methods= c(\"slopehunter\",\"mr_collider_bias\",\"dudbridge\"),                                  tsmr_method = c(\"mr_ivw\",\"mr_egger_regression\",\"mr_simple_median\",\"mr_simple_mode\"),                                  ip     = c(0.01,0.001,0.0001,0.00001,0.000001,0.0000001),                                  pi0    = c(0.6),                                  sxy1   = c(1e-05),                                  bootstraps = 100)  p <- plot_slope(results) p p <- plot_correction_stability(results) p"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/collider_bias.html","id":"applying-the-correction-factor","dir":"Articles","previous_headings":"","what":"Applying the correction factor","title":"Collider bias","text":"parameters set b estimate correction calculated next need apply correction (biased) progression GWAS data. correction uses incidence data can apply variants appear incidence progression datasets (harmonised dataset).","code":"# apply correction corrected_gwas <- apply_collider_correction(gwas_i = gwas_incidence,                                              gwas_p = gwas_progression,                                             merge  = c(\"CHR\"=\"CHR\", \"BP\"=\"BP\"),                                             b_correction_factor = 0.6473,                                             b_std_err = 0.2162)  # calculate difference in raw and adjusted betas; and effect on genome wide significance corrected_gwas[, beta_diff := BETA_progression - adjusted_beta] sig_change_levels <- c(\"Dropped hit\", \"New hit\", \"No change\") corrected_gwas[, sig_change:= data.table::fcase(P_progression < 5e-8 & adjusted_p >= 5e-8, factor(\"Dropped hit\", levels=sig_change_levels),                                                 P_progression >=5e-8 & adjusted_p <  5e-8, factor(\"New hit\", levels=sig_change_levels),                                                 default = factor(\"No change\", levels=sig_change_levels))]  # plot difference p <- ggplot2::ggplot(data    = corrected_gwas,                      mapping = ggplot2::aes(x=factor(\"\"), y = beta_diff)) +   ggplot2::geom_point(mapping = ggplot2::aes(shape = sig_change,                                               fill  = adjusted_beta,                                               color = sig_change), alpha=0.95, position = ggplot2::position_jitter(seed = 1, width = 0.1)) +   viridis::scale_fill_viridis() +   ggplot2::scale_shape_manual(name = \"Change in genome wide significance\",                                values = c(\"Dropped hit\"=25, \"New hit\"=24, \"No change\"=21), drop = FALSE) +   ggplot2::scale_color_manual(name = \"Change in genome wide significance\",                               values = c(\"Dropped hit\"=\"red\", \"New hit\"=\"green\", \"No change\"=\"#44015410\"), drop = FALSE) +   ggplot2::geom_violin(alpha = 0.3, fill=\"purple\", color=\"#44015410\") +   ggplot2::theme_bw(base_size = 14) +   ggplot2::labs(title = 'Slope-hunter adjustment',                 x = expression(\"\\u03B2\"[progression-SNPs]),                 y = expression(\"\\u03B2\"[adjustment]),                  color = \"Change in genome wide significance\",                  fill = \"BETA magnitude\")"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/ld_matrix.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"LD matrix","text":"See setup process PLINK2 executable reference file Clumping vignette.","code":"library(genepi.utils)  # the gwas data gwas <- GWAS(dat=system.file(\"extdata\", \"example2_gwas_sumstats.tsv\", package=\"genepi.utils\"), map=\"ns_map\", fill_rsid=\"b37_dbsnp156\") gwas <- as.data.table(gwas)  # check path to reference which_1000G_reference(\"GRCh37\")  # check path to plink2 executable which_plink2()"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/ld_matrix.html","id":"ld-matrix","dir":"Articles","previous_headings":"","what":"LD matrix","title":"LD matrix","text":"Generate LD matrix. provide GWAS data.table alleles harmonised LD matrix.","code":"# produce LD matrix  obj <- ld_matrix(gwas,                  method    = \"r2\",                  plink2    = genepi.utils::which_plink2(),                  plink_ref = genepi.utils::which_1000G_reference(build=\"GRCh37\"))"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/ld_matrix.html","id":"harmonise-data-against-ld-matrix-alleles","dir":"Articles","previous_headings":"","what":"Harmonise data against LD matrix alleles","title":"LD matrix","text":"previous command harmonised gwas input data.table LD alleles. return value list elements dat ld_mat.","code":"# harmonised data  print(obj['dat'])  # the LD matrix print(obj['ld_mat'])"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/plotting.html","id":"manhattan","dir":"Articles","previous_headings":"","what":"Manhattan","title":"Plotting","text":"simple example using manhattan() plot function.","code":"library(genepi.utils)  gwas <- generate_random_gwas_data(100000)  highlight_snps <- gwas[[\"SNP\"]][[which.min(gwas[[\"P\"]])]]  annotate_snps <- gwas[[\"SNP\"]][[which.min(gwas[[\"P\"]])]]  p <- manhattan(gwas,                highlight_snps = highlight_snps,                highlight_win = 250,                annotate_snps = annotate_snps,                hit_table = TRUE,                title = \"Manhattan Plot\",                subtitle = \"Example 1\")"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/plotting.html","id":"miami","dir":"Articles","previous_headings":"","what":"Miami","title":"Plotting","text":"simple example using miami() plot function. use named lists (.e. ‘top’ ‘bottom’) parameters strictly necessary, helps readability.","code":"library(genepi.utils)  gwas_top    <- generate_random_gwas_data(100000) gwas_bottom <- generate_random_gwas_data(100000)  highlight_snps_top     <- gwas[[\"SNP\"]][[which.min(gwas[[\"P\"]])]] highlight_snps_botttom <- gwas[[\"SNP\"]][[which.max(gwas[[\"P\"]])]]  annotate_snps_top      <- gwas[[\"SNP\"]][[which.min(gwas[[\"P\"]])]] annotate_snps_botttom  <- gwas[[\"SNP\"]][[which.max(gwas[[\"P\"]])]]  colours_top    <- c(\"#67A3D9\",\"#C8E7F5\") colours_bottom <- c(\"#F8B7CD\",\"#F6D2E0\")  p <- miami(gwases         = list(\"top\"=gwas_top, \"bottom\"=gwas_bottom),            highlight_snps = list(\"top\"=highlight_snps_top, \"bottom\"=highlight_snps_botttom),            highlight_win  = list(\"top\"=250,\"bottom\"=250),            annotate_snps  = list(\"top\"=annotate_snps_top, \"bottom\"=annotate_snps_botttom),            colours        = list(\"top\"=colours_top, \"bottom\"=colours_bottom),            downsample     = 0.0,             hit_table      = TRUE,            title          = \"Miami Plot\",            subtitle       = list(\"top\"=\"A\", \"bottom\"=\"B\"))"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/plotting.html","id":"eaf-plot","dir":"Articles","previous_headings":"","what":"EAF plot","title":"Plotting","text":"","code":"library(genepi.utils)  gwas <- generate_random_gwas_data(100000) gwas[1:100, EUR_EAF := NA]  p <- eaf_plot(gwas,               eaf_col = \"EAF\",               ref_eaf_col = \"EUR_EAF\",               tolerance = 0.2,               colours = list(missing=\"#5B1A18\", outlier=\"#FD6467\", within=\"#7294D4\"),               title = \"EAF study vs. reference plot\")"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"roadmap","dir":"Articles","previous_headings":"","what":"Roadmap","title":"Rationale and key points","text":"Phase 1 aimed simple GWAS processing: 1. Reading files 2. Field / column name standardiation 3. Quality control cleaning Phase 2 aimed common GWAS routines: 4. Clumping 5. Annotating RSIDs 6. Generating LD matrices 7. Finding proxies variants Phase 3 aimed specific routines: 8. Calling UVMR & MVMR routines TwoSampleMR Mendelian Randomization 9. Index-event bias - calling IndexEvent MR routines","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"choice-of-language","dir":"Articles","previous_headings":"","what":"Choice of language","title":"Rationale and key points","text":"commonly used languages data analysis R Python, many command line porgrammes written C++ C. ease use, familiarity, prospect onoing collaboration wrote R.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"representation-of-gwas-data","dir":"Articles","previous_headings":"","what":"Representation of GWAS data","title":"Rationale and key points","text":"next question represent GWAS R. obvious choice simple vectors data.frames, range structures used across common genetic epidemiology packages wide, ranging lists (can take data type often require separate validation functions - e.g. coloc) layers custom classes can difficult understand re-use.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"gwas-data-specification","dir":"Articles","previous_headings":"","what":"GWAS data specification","title":"Rationale and key points","text":"GWAS data need majority analyses well defined range data formats wild often lacking. Data standardisation continues addressed exists many good resources recommended specifications.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"data-type-considerations","dir":"Articles","previous_headings":"GWAS data specification","what":"Data type considerations","title":"Rationale and key points","text":"may data type considerations terms memory, especially dealing large GWAS datasets standard machines. --self computer memory increasesing becoming less issue.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"s7","dir":"Articles","previous_headings":"","what":"S7","title":"Rationale and key points","text":"really wanted object-orientated approach initial frustrations S4 R6 class systems made aware new S7 class system. probably quick jump latest trend refactored initial code S7. liked S7 class system strongly typed properties simplifies can quite complex idiosyncrasies S4. also really nice constructor validation process built .","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"simple-s7-class","dir":"Articles","previous_headings":"S7","what":"Simple S7 class","title":"Rationale and key points","text":"","code":"library(S7)  # define a new class CodeClinicSession <- new_class(   name       = \"CodeClinicSession\",   properties = list(     presenter = class_character,     date      = class_Date   ) )  # create a CodeClinicSession object session <- CodeClinicSession(\"nick\", as.Date(\"2024-07-25\"))  session #> <CodeClinicSession> #>  @ presenter: chr \"nick\" #>  @ date     : Date[1:1], format: \"2024-07-25\"  # define a generic print function  method(print, CodeClinicSession) <- function(x) {   cat(\"CodeClinicSession\\n\")   cat(\"\\tPresenter:\", x@presenter, \"\\n\")   cat(\"\\tDate:\", format(x@date, \"%d-%m-%Y\"), \"\\n\") }  print(session) #> CodeClinicSession #>  Presenter: nick  #>  Date: 25-07-2024"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"s7-property-validation","dir":"Articles","previous_headings":"S7","what":"S7 property validation","title":"Rationale and key points","text":"","code":"# define a more complicated class CodeClinicSession <- new_class(   name       = \"CodeClinicSession\",   properties = list(     presenter = new_property(class     = class_character,                               validator = function(value) {                                 valid_presenters <- c(\"nick sunderland\", \"foo\", \"bar\")                                if (!value %in% valid_presenters) {                                  found <- grep(value, valid_presenters, value = TRUE)                                  if (length(found) > 0) {                                    return(paste(value, \"- did you mean presenter\", found, \"?\"))                                  } else {                                    return(value)                                  }                                }                               }),     date      = new_property(class   = class_Date,                               default = Sys.Date())   ) )  # create a CodeClinicSession object try(CodeClinicSession(\"nick\")) #> Error : <CodeClinicSession> object properties are invalid: #> - @presenter nick - did you mean presenter nick sunderland ?  try(CodeClinicSession(\"nick sunderland\")) #> CodeClinicSession #>  Presenter: nick sunderland  #>  Date: 17-09-2025"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"s7-constructor","dir":"Articles","previous_headings":"S7","what":"S7 constructor","title":"Rationale and key points","text":"","code":"# define a more complicated class CodeClinicSession <- new_class(   name       = \"CodeClinicSession\",   properties = list(     presenter = class_character,     date      = class_Date   ),    constructor = function(some_text) {     # parse some text     valid_presenters <- c(\"nick sunderland\", \"foo\", \"bar\")     presenter <- valid_presenters[sapply(valid_presenters, grepl, some_text, ignore.case = TRUE)]     date      <- as.Date(sub(\".*?([0-9]+-[0-9]+-[0-9]+).*\", \"\\\\1\", some_text))          # load the properties     object <- new_object(S7::S7_object(),                           presenter = presenter,                           date      = date)          # return the object     return(object)   } )  # create a CodeClinicSession object session <- CodeClinicSession(\"Nick Sunderland presenting on 2024-07-25\")  session #> CodeClinicSession #>  Presenter: nick sunderland  #>  Date: 25-07-2024"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"gwas-class","dir":"Articles","previous_headings":"S7","what":"GWAS class","title":"Rationale and key points","text":"Putting together created GWAS class.","code":"GWAS_ <- new_class(   #==============================   # GWAS class name   #==============================   name    = \"GWAS\",   package = \"genepi.utils\",    #==============================   # GWAS class properties   #==============================   properties = list(     #----------------------------     # column name mapping     #----------------------------     map     = genepi.utils::ColumnMap,     #----------------------------     # qc procedures     #----------------------------     qc      = class_list,     #----------------------------     # column names / data vectors     #----------------------------     rsid    = class_character,     chr     = class_character,     bp      = class_integer,     ea      = class_character,     oa      = class_character,     eaf     = class_numeric,     beta    = class_numeric,     se      = class_numeric,     p       = class_numeric,     n       = class_integer,     ncase   = class_integer,     strand  = class_character,     imputed = class_logical,     info    = class_numeric,     q       = class_numeric,     q_p     = class_numeric,     i2      = class_numeric,     #----------------------------     # correlation matrix     #----------------------------     correlation = new_S3_class('matrix'),     #----------------------------     # meta data     #----------------------------     trait   = class_character,     id      = class_character,     source  = class_character   ),    #==============================   # GWAS class constructor func.   #==============================   constructor = function(dat,                          map            = \"default\",                          drop           = FALSE,                          fill           = FALSE,                          fill_rsid      = FALSE,                          missing_rsid   = \"fill_CHR:BP\",                          parallel_cores = parallel::detectCores(),                          dbsnp_dir      = genepi.utils::which_dbsnp_directory(),                          filters = list(                            beta_invalid    = \"!is.infinite(beta) & abs(beta) < 20\",                            eaf_invalid     = \"eaf > 0 & eaf < 1\",                            p_invalid       = \"!is.infinite(p)\",                            se_invalid      = \"!is.infinite(se)\",                            alleles_invalid = \"!is.na(ea) & !is.na(oa)\",                            chr_missing     = \"!is.na(chr)\",                            bp_missing      = \"!is.na(bp)\",                            beta_missing    = \"!is.na(beta)\",                            se_missing      = \"!is.na(se)\",                            p_missing       = \"!is.na(p)\",                            eaf_missing     = \"!is.na(eaf)\"),                          reference      = NULL,                          ref_map        = NULL,                          verbose        = TRUE,                          ...) {      if(verbose) message(\"Loading GWAS ...\")      # parse the map     map <- ColumnMap(map)      # as data table     if(inherits(dat, 'data.frame') && !inherits(dat, 'data.table')) { dat <- data.table::as.data.table(dat) }      # load (either from file or data.frame)     gwas <- load_gwas(dat, map=map, drop=drop, fill=fill, verbose=verbose)      # ensure correct type     gwas <- type_columns(gwas, map=map, verbose=verbose)      # standardise columns     gwas <- standardise_columns(gwas, verbose=verbose)      # standardise alleles     gwas <- standardise_alleles(gwas, verbose=verbose)      # apply filters     g    <- apply_filters(gwas, filters=filters, verbose=verbose)     gwas <- g$gwas     qc   <- g$qc      # add or reformat id/rsid     gwas <- populate_rsid(gwas, fill_rsid=fill_rsid, missing_rsid=missing_rsid, parallel_cores=parallel_cores, dbsnp_dir=dbsnp_dir, verbose=verbose)      # harmonise to reference     g <- harmonise_reference(gwas, reference=reference, ref_map=ref_map, qc=qc, verbose=verbose)     gwas <- g$gwas     qc   <- g$qc      # other changes     gwas[p==0, p := .Machine$double.xmin]      # group together as a big list; add the other properties that may have been passed     props <- c(gwas, list(map=map, ...))      # don't need to save all of repetitive columns     if(!\"n\"      %in% names(props))                                   { props$n       <- NA_integer_         }     if(!\"ncase\"  %in% names(props))                                   { props$ncase   <- NA_integer_         }     if(!\"strand\" %in% names(props))                                   { props$strand  <- NA_character_       }     if(!\"imputed\"%in% names(props))                                   { props$imputed <- NA                  }     if(!\"info\"   %in% names(props))                                   { props$info    <- NA_real_            }     if(!\"q\"      %in% names(props))                                   { props$q       <- NA_real_            }     if(!\"q_p\"    %in% names(props))                                   { props$q_p     <- NA_real_            }     if(!\"i2\"     %in% names(props))                                   { props$i2      <- NA_real_            }     if(\"n\"       %in% names(props) && length(unique(props$n))==1    ) { props$n       <- unique(props$n)     }     if(\"ncase\"   %in% names(props) && length(unique(props$ncase))==1) { props$ncase   <- unique(props$ncase) }     if(\"strand\"  %in% names(props) && length(unique(props$strand))==1){ props$strand  <- unique(props$strand)}     if(!\"trait\"  %in% names(props))                                   { props$trait   <- \"trait\"}     if(!\"id\"     %in% names(props))                                   { props$id      <- \"id\" }     if(length(unique(props$trait))==1)                                { props$trait   <- unique(props$trait) }     if(length(unique(props$id))==1)                                   { props$id      <- unique(props$id)    }      # set filters and qc     props$qc <- qc      # set correlation matrix if not provided     if(!\"correlation\" %in% names(props)) { props$correlation <- matrix() }      # set data source     if(is.character(dat) && file.exists(dat)) {       props$source <- dat     } else {       props$source <- 'data.table'     }      # assign to the class object     object <- new_object(S7::S7_object(),                map         = props$map,                qc          = props$qc,                rsid        = props$rsid,                chr         = props$chr,                bp          = props$bp,                ea          = props$ea,                oa          = props$oa,                eaf         = props$eaf,                beta        = props$beta,                se          = props$se,                p           = props$p,                n           = props$n,                ncase       = props$ncase,                strand      = props$strand,                imputed     = props$imputed,                info        = props$info,                q           = props$p,                q_p         = props$q_p,                i2          = props$i2,                trait       = props$trait,                id          = props$id,                source      = props$source,                correlation = props$correlation)      # return the object     return(object)   },    #==============================   # GWAS class validator func.   #==============================   validator = function(self) {     stopifnot(\"Unequal vector lengths\" = sapply(lengths(list(self@rsid, self@chr, self@bp, self@ea, self@oa, self@eaf, self@beta, self@se, self@p)), function(x) x == length(self@rsid)))     stopifnot(\"Invalid sample size `n`\"       = length(self@n)<=1 || length(self@n)==length(self@rsid))     stopifnot(\"Invalid sample size `ncase`\"   = length(self@ncase)<=1 || length(self@ncase)==length(self@rsid))     stopifnot(\"Invalid sample size `strand`\"  = length(self@strand)<=1 || length(self@strand)==length(self@rsid))     stopifnot(\"Invalid sample size `imputed`\" = length(self@imputed)<=1 || length(self@imputed)==length(self@rsid))     stopifnot(\"Invalid sample size `info`\"    = length(self@info)<=1 || length(self@info)==length(self@rsid))     stopifnot(\"Invalid `trait` field length\"  = length(self@trait)<=1)     stopifnot(\"Invalid `id` field length\"     = length(self@id)<=1)   } )"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"load-a-gwas","dir":"Articles","previous_headings":"","what":"Load a GWAS","title":"Rationale and key points","text":"","code":"library(genepi.utils)  # the datafile  filepath <- system.file(\"extdata\", \"example2_gwas_sumstats.tsv\", package=\"genepi.utils\")  # the column mapping  columns <- c('MARKER', 'CHR', 'POS', 'BETA', 'SE', 'P', 'EAF', 'A1', 'A2') # will try to guess standard name mapping map <- ColumnMap(columns)  # load gwas <- GWAS(dat = filepath, map = map, fill_rsid = \"b37_dbsnp156\")  # view as table as.data.table(gwas)[, 1:10]"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"run-an-analysis","dir":"Articles","previous_headings":"","what":"Run an analysis","title":"Rationale and key points","text":"","code":"# bmi bmi_gwas <- GWAS(dat = \"/Users/xx20081/Documents/local_data/giant_2018/bmi.giant-ukbb.meta-analysis.combined.23May2018.gz\",                   map = c(rsid = \"SNP\", chr = \"CHR\", bp = \"POS\", ea = \"Tested_Allele\", oa = \"Other_Allele\", eaf = \"Freq_Tested_Allele\", beta = \"BETA\", se = \"SE\", p = \"P\", n = \"N\"),                   trait = \"bmi\",                   id    = \"bmi_gwas\")  # heart failure heart_failure_gwas <- GWAS(dat = \"/Users/xx20081/Documents/local_data/hermes_incidence/raw/Pheno1_EUR/FORMAT-METAL_Pheno1_EUR.tsv.gz\",                             map = c(rsid = \"rsID\", chr = \"chr\", bp = \"pos_b37\", ea = \"A1\", oa = \"A2\", beta = \"A1_beta\", eaf = \"A1_freq\", se = \"se\", p = \"pval\", ncase = \"N_case\", n = \"N_total\"),                             trait = \"heart failure\",                             id    = \"hf_gwas\")  # coronary artery disease cad_gwas <- GWAS(dat = \"/Users/xx20081/Documents/local_data/cad/GCST90043957_buildGRCh37.tsv.gz\",                   map = c(rsid = \"variant_id\", chr = \"chromosome\", bp = \"base_pair_location\", ea = \"effect_allele\", oa = \"other_allele\", beta = \"beta\", eaf = \"effect_allele_frequency\", se = \"standard_error\", p = \"p_value\", n = \"N\"),                   trait = \"coronary artery disease\",                  id    = \"cad_gwas\")  # create MR object (harmonises) mr_object <- MR(exposure = list(bmi_gwas, cad_gwas),                 outcome  = heart_failure_gwas,                  harmonise_strictness = 2)  # clumping mr_object <- clump_mr(mr_object, p1 = 5e-8, r2 = 0.001, kb = 10000)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"mr-object","dir":"Articles","previous_headings":"","what":"MR object","title":"Rationale and key points","text":"","code":"# run mr results <- run_mr(mr_object, methods = c('mr_ivw','mr_egger'))  # plot plot_mr(mr_object, results) manhattan(cad_gwas) qq_plot(cad_gwas)"},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"harmonisation","dir":"Articles","previous_headings":"Other things","what":"Harmonisation","title":"Rationale and key points","text":"highly reusable GWAS object means needs persist data, might subsequently used different purpose requiring different data. Currently, means harmonising many variants revealed bottle-neck TwoSampleMR::harmonise - now fixed. Evaluation speed analysis harmonisation function. Tests run 100,000 rows. Analysis downsampled GWAS 100,000 variants  Post TwoSampleMR update","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"rsid-mapping","dir":"Articles","previous_headings":"Other things","what":"RSID mapping","title":"Rationale and key points","text":"RSID annotation common problem. issue dbSNP huge, 1 billion variants, need good strategy. Options: Formal database Tabix File splitting parallelization chose third option. principle outlines :","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"which-subsetting-files-method","dir":"Articles","previous_headings":"Other things > RSID mapping","what":"Which subsetting files method?","title":"Rationale and key points","text":"Fst fastest subsetting files.","code":"if (FALSE) {   tm <- microbenchmark(\"fst\"        = { fst_dat[which(fst_dat[\"p\"] < 5e-8), ]            },                        \"data.table\" = { dat <- fread(\"gwas.tsv.gz\"); dat[p < 5e-8, ]     },                        \"vroom\"      = { dat <- vroom(\"gwas.tsv.gz\"); dat[dat$p < 5e-8, ] },                        times = 100) } knitr::include_graphics(\"figures/subsetting_speed.png\")"},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"rsid-annotation-for-10m-rows","dir":"Articles","previous_headings":"Other things > RSID mapping","what":"RSID annotation for 10M rows","title":"Rationale and key points","text":"’s reasonably fast, 10 million row GWAS can process ~ 4 minutes. Post TwoSampleMR update","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"index-event-bias","dir":"Articles","previous_headings":"Other things","what":"Index event bias","title":"Rationale and key points","text":"multiple methods investigate index-event bias. take incidence progression GWAS plus initiation parameters. function calls grid.expand provided parameters runs permeations. underlying functions simply packages well functions run clumping.","code":"# n.b. function deprecated; now use `collider_bias` results <- analyse_collider_bias(gwas_i      = gwas_clumped_incidence,                                  gwas_p      = gwas_progression,                                  merge       = c(\"CHR\"=\"CHR\", \"BP\"=\"BP\"),                                  methods     = c(\"slopehunter\",\"mr_collider_bias\",\"dudbridge\"),                                  tsmr_method = c(\"mr_ivw\",\"mr_egger_regression\",\"mr_simple_median\",\"mr_simple_mode\"),                                  ip          = c(0.01,0.001,0.0001,0.00001,0.000001,0.0000001),                                  pi0         = c(0.6),                                  sxy1        = c(1e-05),                                  bootstraps  = 100)  # plot plot_slope(results) plot_correction_stability(results)"},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"mungesumstats","dir":"Articles","previous_headings":"Other packages","what":"MungeSumstats","title":"Rationale and key points","text":"MungeSumstats quite comprehensive GWAS formatting package many control options. uses SNPlocs.Hsapiens Bioconductor packages RSID mapping. Unfortunately SNPlocs packages routinely updated latest dbSNP releases include indels present dbSNP can limiting interested indels. microbenchmarking slightly unfair MungeSumstats checks.","code":"library(MungeSumstats) library(microbenchmark) library(ggplot2)  hf_gwas_file <- \"/Users/xx20081/Documents/local_data/hermes_incidence/raw/Pheno1_EUR/FORMAT-METAL_Pheno1_EUR.tsv.gz\" hf_gwas_map  <- c(rsid = \"rsID\", chr = \"chr\", bp = \"pos_b37\", ea = \"A1\", oa = \"A2\", beta = \"A1_beta\", eaf = \"A1_freq\", se = \"se\", p = \"pval\", ncase = \"N_case\", n = \"N_total\")  tm <- microbenchmark(\"MungeSumstats\" = {MungeSumstats::format_sumstats(path = hf_gwas_file,                                                                        ref_genome = \"GRCh37\",                                                                         return_data = TRUE,                                                                         nThread = 12)},                      \"genepi.utils\" = {genepi.utils::GWAS(dat       = hf_gwas_file,                                                            map       = hf_gwas_map,                                                            fill_rsid = \"b37_dbsnp156\",                                                           trait     = \"heart failure\",                                                            id        = \"hf_gwas\")},                       times = 2)  autoplot(tm)"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"future-directions","dir":"Articles","previous_headings":"","what":"Future directions","title":"Rationale and key points","text":"Focus actually delivering PhD proposal Thought using .fst files persist data behind GWAS object, data doesn’t need sit memory just store index information file. Reading GWAS looks cache previous cleaned file loads , add reload_raw = TRUE/FALSE option.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/rationale.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Rationale and key points","text":"unified approach handling GWAS data R needed? , attempt ? , done? (levels abstraction)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/articles/standardise_gwas.html","id":"column-mapping","dir":"Articles","previous_headings":"","what":"Column mapping","title":"Standardise GWAS","text":"number column mapping options standard GWAS formats provided ColumnMap() class. string - valid id pre-defined map (e.g. ‘giant’ ‘gwama’) unnamed character vector list - constructor create ColumnMap object long provided column names found within list known aliases named character vector list - names must standard column names map , values current column names list Column class objects","code":"# possible inputs to mapping object colmap_input1 <-    c('MARKER', 'CHR', 'POS', 'BETA', 'SE', 'P', 'EAF', 'A1', 'A2') # will try to guess standard name mapping colmap_input2 <- list(rsid='MARKER', chr='CHR', bp='POS', beta='BETA', se='SE', p='P', eaf='EAF', ea='A1', oa='A2') # standard naming colmap_input3 <- list(Column(name='rsid', alias=c('MARKER'), type='character'),                       Column(name='chr',  alias=c('CHR'),    type='character'),                       Column(name='bp',   alias=c('POS'),    type='integer'),                       Column(name='beta', alias=c('BETA'),   type='numeric'),                       Column(name='se',   alias=c('SE'),     type='numeric'),                       Column(name='p',    alias=c('P'),      type='numeric'),                       Column(name='eaf',  alias=c('EAF'),    type='numeric'),                       Column(name='ea',   alias=c('A1'),     type='character'),                       Column(name='oa',   alias=c('A2'),     type='character'))  # column mapping object map <- ColumnMap(\"ns_map\") map <- ColumnMap(colmap_input1) map <- ColumnMap(colmap_input2) map <- ColumnMap(colmap_input3)  map"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/standardise_gwas.html","id":"standardise-gwas","dir":"Articles","previous_headings":"","what":"Standardise GWAS","title":"Standardise GWAS","text":"GWAS can standardised like :","code":"filepath <- system.file(\"extdata\", \"example2_gwas_sumstats.tsv\", package=\"genepi.utils\")  gwas <- GWAS(dat=filepath, map=map)  gwas"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/standardise_gwas.html","id":"as-data-table","dir":"Articles","previous_headings":"","what":"As data.table","title":"Standardise GWAS","text":"GWAS object can easily converted data.table.","code":"g <- as.data.table(gwas)  g"},{"path":"https://nicksunderland.github.io/genepi.utils/articles/standardise_gwas.html","id":"custom-quality-control","dir":"Articles","previous_headings":"","what":"Custom quality control","title":"Standardise GWAS","text":"GWAS object created number data checks filters. default filters can altered via filters argument, takes named list strings can evaluated expressions filter data.table. results filtering can found @qc property GWAS object named list integer vectors identifying rows fail particular filter.","code":"gwas <- data.table::fread(filepath)  gwas <- GWAS(dat     = gwas,               map     = map,               filters = list(beta_invalid = \"!is.infinite(beta) & abs(beta) < 10\",                             eaf_invalid  = \"eaf >= 0.01 & eaf <= 0.99\",                             p_invalid    = \"!is.infinite(p) & sign(p) != -1 & p < 1\",                             se_invalid   = \"!is.infinite(se) & abs(se) < 10\",                             chr_missing  = \"!is.na(chr)\",                             bp_missing   = \"!is.na(bp)\",                             beta_missing = \"!is.na(beta)\",                             se_missing   = \"!is.na(se)\",                             p_missing    = \"!is.na(p)\",                             eaf_missing  = \"!is.na(eaf)\"))  gwas@qc"},{"path":"https://nicksunderland.github.io/genepi.utils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Sunderland. Author, maintainer.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sunderland N (2025). genepi.utils: GenEpi Utility Functions. R package version 0.1.3, https://nicksunderland.github.io/genepi.utils/.","code":"@Manual{,   title = {genepi.utils: GenEpi Utility Functions},   author = {Nicholas Sunderland},   year = {2025},   note = {R package version 0.1.3},   url = {https://nicksunderland.github.io/genepi.utils/}, }"},{"path":"https://nicksunderland.github.io/genepi.utils/index.html","id":"genepiutils","dir":"","previous_headings":"","what":"GenEpi Utility Functions","title":"GenEpi Utility Functions","text":"genepi.utils package collection utility functions working genetic epidemiology data. common use cases please see vignettes.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"GenEpi Utility Functions","text":"can install development version genepi.utils like : package relies parallel processing capabilities data.table, furrr fst packages. can installed like : Important: mac can challenging enable OpenMP parallel processing clang compiler include OpenMP runtime standard. recommend following instructions data.table GitHub link. Key successful installation Macbook M2 Max creating Makevars file root directory ~/.R/Makevars, simple text file, containing compilation flags , re-installing source. Re-install packages source.","code":"# install.packages(\"devtools\") devtools::install_github(\"nicksunderland/genepi.utils\") install.packages(\"data.table\") install.packages(\"furrr\") install.packages(\"fst\") LDFLAGS += -L/opt/homebrew/opt/libomp/lib -lomp CPPFLAGS += -I/opt/homebrew/opt/libomp/include -Xclang -fopenmp remove.packages(\"data.table\") remove.packages(\"furrr\") remove.packages(\"fstcore\") remove.packages(\"fst\")  install.packages(\"https://cran.r-project.org/src/contrib/data.table_1.15.4.tar.gz\", type=\"source\", repos=NULL) install.packages(\"https://cran.r-project.org/src/contrib/furrr_0.3.1.tar.gz\", type=\"source\", repos=NULL) install.packages(\"https://cran.r-project.org/src/contrib/fstcore_0.9.18.tar.gz\", type=\"source\", repos=NULL) install.packages(\"https://cran.r-project.org/src/contrib/fst_0.9.8.tar.gz\", type=\"source\", repos=NULL)"},{"path":"https://nicksunderland.github.io/genepi.utils/index.html","id":"download-the-dbsnp-data-repository","dir":"","previous_headings":"","what":"Download the dbSNP data repository","title":"GenEpi Utility Functions","text":"RSID mapping need copy dbSNP .fst file directory. hosted somewhere need ask nicholas.sunderland@bristol.ac.uk data files. working Bristol IEU package work BC4. , ask location dbSNP .fst file directory HPC. use custom location dbSNP directory need set package - needs done per package install.","code":"set_dbsnp_directory(\"/path_to_directory/dbsnp\")"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/Column.html","id":null,"dir":"Reference","previous_headings":"","what":"Column object — Column","title":"Column object — Column","text":"Column object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/Column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column object — Column","text":"","code":"Column(name = character(0), alias = character(0), type = character(0))"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/Column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column object — Column","text":"name standard column name alias character vector aliases (column names) column type character, atomic R type","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/Column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column object — Column","text":"S7 class genepi.utils::Column object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/Column.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Column object — Column","text":"name standard column name alias character vector aliases (column names) column type character, atomic R type","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ColumnMap.html","id":null,"dir":"Reference","previous_headings":"","what":"ColumnMap object — ColumnMap","title":"ColumnMap object — ColumnMap","text":"mapping standardised column names used package. Available names: 'rsid', 'chr', 'bp', 'ea', 'oa', 'eaf', 'p', 'beta', 'se', '', 'or_se', 'or_lb', 'or_ub', 'beta_lb', 'beta_ub', 'z', 'q_stat', 'i2', 'nstudies', 'n'","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ColumnMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ColumnMap object — ColumnMap","text":"","code":"ColumnMap(x)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ColumnMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ColumnMap object — ColumnMap","text":"x either list Column class objects, valid string pre-defined map: default, metal, ieu_ukb, ieugwasr, ns_map, gwama, giant, named character vector list (standard name = old name)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ColumnMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ColumnMap object — ColumnMap","text":"S7 class genepi.utils::ColumnMap object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ColumnMap.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ColumnMap object — ColumnMap","text":"map list Column class objects","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/GWAS.html","id":null,"dir":"Reference","previous_headings":"","what":"GWAS object — GWAS","title":"GWAS object — GWAS","text":"GWAS object container vectors GWAS data, correlation matrix, meta-data regarding quality control procedures applied point object creation / data import.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/GWAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GWAS object — GWAS","text":"","code":"GWAS(   dat,   map = \"default\",   drop = FALSE,   fill = FALSE,   fill_rsid = FALSE,   missing_rsid = \"fill_CHR:BP\",   parallel_cores = parallel::detectCores(),   dbsnp_dir = genepi.utils::which_dbsnp_directory(),   filters = list(beta_invalid = \"!is.infinite(beta) & abs(beta) < 20\", eaf_invalid =     \"eaf > 0 & eaf < 1\", p_invalid = \"!is.infinite(p)\", se_invalid = \"!is.infinite(se)\",     alleles_invalid = \"!is.na(ea) & !is.na(oa)\", chr_missing = \"!is.na(chr)\", bp_missing     = \"!is.na(bp)\", beta_missing = \"!is.na(beta)\", se_missing = \"!is.na(se)\", p_missing =     \"!is.na(p)\", eaf_missing = \"!is.na(eaf)\"),   reference = NULL,   ref_map = NULL,   verbose = TRUE,   ... )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/GWAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GWAS object — GWAS","text":"dat valid string file path read data.table::fread data.table::data.table object; GWAS data source map valid input ColumnMap class constructor (predefined map string id, named list character vector, ColumMap object) drop logical, whether drop data source columns column map fill logical, whether add (NAs) missing columns present column map present data source fill_rsid either FALSE valid argument chrpos_to_rsid build argument, e.g. \"b37_dbsnp156\" missing_rsid string, handle missing rsids: one \"fill_CHR:BP\", \"fill_CHR:BP_OA_EA\", \"overwrite_CHR:BP\", \"overwrite_CHR:BP:OA:EA\", \"none\", \"leave\" parallel_cores integer, number cores used RSID mapping, default maximum machine cores dbsnp_dir path dbsnp directory fst files see chrpos_to_rsid dbsnp_dir argument filters list named strings, evaluated expression filter data quality control steps () reference valid string file path read data.table::fread data.table::data.table object; reference data ref_map valid input ColumnMap class constructor (predefined map id (string), named list character vector, ColumMap object) defining least columns rsid (chr, bp), ea, oa eaf. verbose logical, whether print details ... variable capture passed constructor, e.g. individual vectors slots, rather dat","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/GWAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GWAS object — GWAS","text":"S7 class genepi.utils::GWAS object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/GWAS.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"GWAS object — GWAS","text":"rsid character, variant ID - usually rs12345 format, however can changed missing_rsid argument chr character, chromosome identifier bp integer, base position ea character, effect allele oa character, allele eaf numeric, effect allele frequency beta numeric, effect size se numeric, effect size standard error p numeric, p-value n integer, total number samples ncase integer, number cases strand character, strand + - imputed logical, whether imputed info numeric, info score q numeric, Q statistic meta analysis results q_p numeric, Q statistic P-value i2 numeric, I2 statistic proxy_rsid character, proxy variant ID proxy_chr character, proxy chromosome identifier proxy_bp integer, proxy base position proxy_ea character, proxy effect allele proxy_oa character, proxy allele proxy_eaf numeric, proxy effect allele frequency proxy_r2 numeric, proxy r2 rsid trait character, GWAS trait id character, GWAS identifier source character, data source; either file path, \"data.table\" loaded directly correlation matrix, correlation matrix signed R values variants map ColumnMap, mapping class ColumnMap qc list, named list filters; name filter expression value integer vector rows fail filter","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/MR.html","id":null,"dir":"Reference","previous_headings":"","what":"MR object — MR","title":"MR object — MR","text":"MR object container vectors matrices 2 GWAS data.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/MR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MR object — MR","text":"","code":"MR(   exposure,   outcome,   harmonise_strictness = 2,   correlation = NULL,   verbose = TRUE )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/MR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MR object — MR","text":"exposure GWAS object list GWAS objects outcome GWAS object harmonise_strictness integer (1,2,3) corresponding TwoSampleMR harmonisation options name. correlation matrix, correlation matrix signed R values variants verbose logical, print information","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/MR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MR object — MR","text":"S7 class genepi.utils::MR object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/MR.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MR object — MR","text":"snps character, variant ID chr character, chromosome identifier bp integer, base position ea character, effect allele oa character, allele eafx numeric, exposure effect allele frequency nx integer, exposure total number samples ncasex integer, exposure number cases bx numeric, exposure effect size bxse numeric, exposure effect size standard error px numeric, exposure p-value eafy numeric, exposure effect allele frequency ny integer, exposure total number samples ncasey integer, exposure number cases numeric, exposure effect size byse numeric, exposure effect size standard error py numeric, exposure p-value exposure_id character, GWAS identifier exposure character, GWAS exposure outcome_id character, GWAS identifier outcome character, GWAS outcome group integer, grouping variable used plotting index_snp logical, whether variant index variant (via clumping) proxy_snp character, id proxy snp ld_info logical, whether LD information info data.frame, information loaded GWAS objects correlation matrix, correlation matrix signed R values variants","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/as.data.table.html","id":null,"dir":"Reference","previous_headings":"","what":"as.data.table — as.data.table","title":"as.data.table — as.data.table","text":".data.table","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/as.data.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.data.table — as.data.table","text":"","code":"as.data.table(object, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/as.data.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.data.table — as.data.table","text":"object GWAS object covert data.table ... argument data.table generic, ignored implementation","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/chrpos_to_rsid.html","id":null,"dir":"Reference","previous_headings":"","what":"Chromosome & position data to variant RSID — chrpos_to_rsid","title":"Chromosome & position data to variant RSID — chrpos_to_rsid","text":"Chromosome & position data variant RSID","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/chrpos_to_rsid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chromosome & position data to variant RSID — chrpos_to_rsid","text":"","code":"chrpos_to_rsid(   dt,   chr_col,   pos_col,   ea_col = NULL,   nea_col = NULL,   flip = \"allow\",   alt_rsids = FALSE,   build = \"b37_dbsnp156\",   dbsnp_dir = genepi.utils::which_dbsnp_directory(),   parallel_cores = parallel::detectCores(),   verbose = TRUE )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/chrpos_to_rsid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chromosome & position data to variant RSID — chrpos_to_rsid","text":"dt data.frame like object, file path, least columns (chrom, pos, ea, nea) chr_col string column name; chromosome position pos_col string column name; base position ea_col string column name; effect allele nea_col string column name; non effect allele flip string, options: \"report\", \"allow\", \"no_flip\" alt_rsids logical, whether return additional alternate RSIDs build string, options: \"b37_dbsnp156\", \"b38_dbsnp156\" (corresponds appropriate data directory) dbsnp_dir string file path dbSNP .fst file directory - see setup documentation parallel_cores integer, number cores/workers set future::multisession verbose logical, runtime reporting","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/chrpos_to_rsid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chromosome & position data to variant RSID — chrpos_to_rsid","text":"data.table RSID column (list: 1-data.table; 2-list alternate rsids IDs)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump.html","id":null,"dir":"Reference","previous_headings":"","what":"Clump a GWAS — clump","title":"Clump a GWAS — clump","text":"Clump variants GWAS using PLINK2 appropriate reference panel. example, 1000 genomes phase 3 data can downloaded PLINK website (https://www.cog-genomics.org/plink/2.0/resources#phase3_1kg). remove duplicates can run:  plink2  –pfile all_phase3  –rm-dup force-first  –make-pgen  –all_phase3_nodup  path reference (without plink extensions) passed plink_ref argument. path plink2 executable passed plink2 argument.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clump a GWAS — clump","text":"","code":"clump(   gwas,   p1 = 1,   p2 = 1,   r2 = 0.1,   kb = 250,   plink2 = genepi.utils::which_plink2(),   plink_ref = genepi.utils::which_1000G_reference(build = \"GRCh37\"),   logging = TRUE,   parallel_cores = parallel::detectCores() )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clump a GWAS — clump","text":"gwas data.frame like object least columns rsid, ea, oa, p p1 numeric, p-value threshold inclusion clump p2 numeric, p-value threshold incorporation clump r2 numeric, r2 value kb integer, window clumping plink2 string, path plink executable plink_ref string, path pfile genome reference logging logical, whether set plink logging information attributes (log, missing_id, missing_allele) returned data.table parallel_cores integer, many cores / threads use","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clump a GWAS — clump","text":"data.table additional columns index (logical, whether variant index SNP) clump (integer, clump variant belongs )","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump_mr.html","id":null,"dir":"Reference","previous_headings":"","what":"Clump MR object exposure — clump_mr","title":"Clump MR object exposure — clump_mr","text":"Clump MR object exposure","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump_mr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clump MR object exposure — clump_mr","text":"","code":"clump_mr(   x,   p1 = 1,   p2 = 1,   r2 = 0.001,   kb = 250,   plink2 = genepi.utils::which_plink2(),   plink_ref = genepi.utils::which_1000G_reference(build = \"GRCh37\"),   parallel_cores = parallel::detectCores() )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/clump_mr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clump MR object exposure — clump_mr","text":"x object class MR description p1 numeric, p-value threshold inclusion clump p2 numeric, p-value threshold incorporation clump r2 numeric, r2 value kb integer, window clumping plink2 string, path plink executable plink_ref string, path pfile genome reference parallel_cores integer, many cores / threads use","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/collider_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Run collider bias assessment — collider_bias","title":"Run collider bias assessment — collider_bias","text":"Run collider bias assessment","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/collider_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run collider bias assessment — collider_bias","text":"","code":"collider_bias(   x,   bias_method = \"dudbridge\",   r2 = 0.001,   p1 = 5e-08,   kb = 250,   plink2 = genepi.utils::which_plink2(),   plink_ref = genepi.utils::which_1000G_reference(build = \"GRCh37\"),   ip = 0.001,   pi0 = 0.6,   sxy1 = 1e-05,   bootstraps = 100,   weighted = TRUE,   method = \"Simex\",   B = 1000,   seed = 2023 )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/collider_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run collider bias assessment — collider_bias","text":"x object class MR bias_method character character vector, one c(\"dudbridge\", \"slopehunter\", \"mr_ivw\", \"mr_egger\", \"mr_weighted_median\", \"mr_weighted_mode\") r2 numeric 0-1, r2 used clumping - set clumping params NA turn p1 numeric 0-1, p1 used clumping - set clumping params NA turn kb integer, kb used clumping - set clumping params NA turn plink2 path, plink2 binary plink_ref path, reference genome pfile ip numeric 0-1, threshold removing incidence variants;  see xp_thresh SlopeHunter::hunt() pi0 numeric 0-1, proportion SNPs incidence cluster; see init_pi SlopeHunter::hunt() sxy1 numeric, covariance incidence progression Gip SNPs; see init_sigmaIP SlopeHunter::hunt() bootstraps integer, number bootstraps estimate SE; see M SlopeHunter::hunt() weighted see weighted indexevent::indexevent() method see method indexevent::indexevent() B see B indexevent::indexevent() seed seed, reproducibility","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/cwls.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrected Weighted Least Squares collider bias method — cwls","title":"Corrected Weighted Least Squares collider bias method — cwls","text":"Corrected Weighted Least Squares collider bias method","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/cwls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrected Weighted Least Squares collider bias method — cwls","text":"","code":"cwls(x, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/cwls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrected Weighted Least Squares collider bias method — cwls","text":"x object class MR ... parameter sink, additional ignored parameters","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/cwls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corrected Weighted Least Squares collider bias method — cwls","text":"object class MRResult","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/dudbridge.html","id":null,"dir":"Reference","previous_headings":"","what":"Dudbridge collider bias method — dudbridge","title":"Dudbridge collider bias method — dudbridge","text":"Dudbridge collider bias method","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/dudbridge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dudbridge collider bias method — dudbridge","text":"","code":"dudbridge(   x,   weighted = TRUE,   prune = NULL,   method = \"Simex\",   B = 1000,   lambda = seq(0.25, 5, 0.25),   seed = 2018 )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/dudbridge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dudbridge collider bias method — dudbridge","text":"x object class MR weighted see indexevent::indexevent() prune see indexevent::indexevent() method see indexevent::indexevent() B see indexevent::indexevent() lambda see indexevent::indexevent() seed see indexevent::indexevent()","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/dudbridge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dudbridge collider bias method — dudbridge","text":"object class MRResult","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/eaf_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect allele frequency plot — eaf_plot","title":"Effect allele frequency plot — eaf_plot","text":"Plotting reported effect allele frequencies (EAF) reference set identify study variants significantly deviate expected population frequencies.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/eaf_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect allele frequency plot — eaf_plot","text":"","code":"eaf_plot(   gwas,   eaf_col = \"EAF\",   ref_eaf_col = \"EUR_EAF\",   tolerance = 0.2,   colours = list(missing = \"#5B1A18\", outlier = \"#FD6467\", within = \"#7294D4\"),   title = NULL,   facet_grid_row_col = NULL,   facet_grid_col_col = NULL )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/eaf_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effect allele frequency plot — eaf_plot","text":"gwas data.table eaf_col string, column containing study EAF data ref_eaf_col string, column containing reference EAF data tolerance numeric, frequency difference determines outliers colours 3 element list colour codes, e.g. list(missing=\"#5B1A18\", outlier=\"#FD6467\", within=\"#7294D4\") title string, plot title facet_grid_row_col (optional), column facet plot rows facet_grid_col_col (optional), column facet plot columns","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/eaf_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effect allele frequency plot — eaf_plot","text":"ggplot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/genepi.utils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"genepi.utils: GenEpi Utility Functions — genepi.utils-package","title":"genepi.utils: GenEpi Utility Functions — genepi.utils-package","text":"genepi.utils package collection utility functions working genetic epidemiology data.","code":""},{"path":[]},{"path":"https://nicksunderland.github.io/genepi.utils/reference/genepi.utils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"genepi.utils: GenEpi Utility Functions — genepi.utils-package","text":"Maintainer: Nicholas Sunderland nicholas.sunderland@bristol.ac.uk (ORCID)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/generate_random_gwas_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random GWAS data — generate_random_gwas_data","title":"Generate random GWAS data — generate_random_gwas_data","text":"Generates rows synthetic GWAS summary stats data. Useful developing plotting methods. attempt made make data realistic.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/generate_random_gwas_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random GWAS data — generate_random_gwas_data","text":"","code":"generate_random_gwas_data(n, seed = 2023)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/generate_random_gwas_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random GWAS data — generate_random_gwas_data","text":"n number fake variants generate seed seed, reproducibility","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/generate_random_gwas_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random GWAS data — generate_random_gwas_data","text":"data.table columns SNP, CHR, BP, OA, EA, EAF, BETA, P, EUR_EAF","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_pfile_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variants from plink binary — get_pfile_variants","title":"Extract variants from plink binary — get_pfile_variants","text":"Extract variants plink binary","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_pfile_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variants from plink binary — get_pfile_variants","text":"","code":"get_pfile_variants(   snp,   win_kb,   chr,   from_bp,   to_bp,   plink2 = genepi.utils::which_plink2(),   pfile = genepi.utils::which_1000G_reference(build = \"GRCh37\") )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_pfile_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variants from plink binary — get_pfile_variants","text":"snp character, rsid win_kb numeric, window size around snp kb chr character, chromosome (use instead snp win_kb, addition) from_bp numeric, start base position (use instead snp win_kb, addition) to_bp numeric, end base position (use instead snp win_kb, addition) plink2 character / path, plink2 executable pfile character / path, plink pfile set","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_pfile_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variants from plink binary — get_pfile_variants","text":"data.table","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_proxies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get proxies for variants from plink binary — get_proxies","title":"Get proxies for variants from plink binary — get_proxies","text":"Subsets GWAS variants potential proxies variants x","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_proxies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get proxies for variants from plink binary — get_proxies","text":"","code":"get_proxies(   x,   stat = \"r2-unphased\",   win_kb = 125,   win_r2 = 0.8,   win_ninter = Inf,   proxy_eaf = NULL,   plink2 = genepi.utils::which_plink2(),   pfile = genepi.utils::which_1000G_reference(build = \"GRCh37\"),   ... )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/get_proxies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get proxies for variants from plink binary — get_proxies","text":"x character vector rsids GWAS object stat character, R stat calculate, one \"r2-unphased\", \"r2-phased\", \"r-unphased\", \"r-phased\" win_kb numeric, window look around variants win_r2 numeric, lower r2 limit include output, (–r-phased –r-unphased, means |r|≥sqrt(0.2)) win_ninter numeric, controls maximum number variants allowed variant-pairs report. Inf = . proxy_eaf numeric, minimal effect allele frequency proxy variants. NULL = eaf filtering . plink2 character / path, plink2 executable pfile character / path, plink pfile set ... Additional arguments passed methods. x GWAS object, use: snps (character) vector rsids ensure exist find proxies . (character) Either \"add\" (adds proxies GWAS) \"subset\" (restricts selected variants proxies).","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/harmonise_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonise GWAS — harmonise_gwas","title":"Harmonise GWAS — harmonise_gwas","text":"Harmonise GWAS","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/harmonise_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonise GWAS — harmonise_gwas","text":"","code":"harmonise_gwas(gwas, ref, join = \"chr:bp\", action = 2, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/harmonise_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonise GWAS — harmonise_gwas","text":"gwas GWAS object, data.table, file path ref GWAS object, data.table, file path join character, either 'chr:pos'(default) 'rsid', columns perform join action integer, 1-, 2-, 3- ... Additional arguments passed methods. x GWAS object, use: rmap named vector list, mapping reference input, standard name = old name (active using data.table file path inputs) gmap named vector list, mapping gwas input, standard name = old name (active using data.table file path inputs)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/harmonise_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonise GWAS — harmonise_gwas","text":"data.table, harmonised GWAS data","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ld_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate LD matrix — ld_matrix","title":"Calculate LD matrix — ld_matrix","text":"Based ieugwasr function (see reference)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ld_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate LD matrix — ld_matrix","text":"","code":"ld_matrix(   dat,   colmap = NULL,   method = \"r\",   plink2 = genepi.utils::which_plink2(),   plink_ref = genepi.utils::which_1000G_reference(build = \"GRCh37\"),   ukbb_ref = NULL,   force_all = FALSE )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ld_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate LD matrix — ld_matrix","text":"dat data.frame like object, file path, least column rsid; columns ea,oa,beta,eaf provided variants return harmonised reference panel (effect allele, data = major allele, reference) colmap list, mapping columns list(rsid=?,ea=?,oa=?,beta=?,eaf=?) ? can character vector case harmonised datasets. Warning - assumed harmonised datasets indeed harmonised, , unharmonised variants inappropriately removed. method string, either r r2 plink2 string, path plink executable plink_ref string, path pfile genome reference ukbb_ref path UKBB reference file force_all logical, TRUE assumes variants found reference (e.g. non rsid coded chr:pos_ref_alt)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ld_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate LD matrix — ld_matrix","text":"LD matrix variants provided, else alleles provided list(dat=harmonised data, ld_mat=ld_matrix)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/ld_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate LD matrix — ld_matrix","text":"ieugwasr::ld_matrix_local()","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/lift.html","id":null,"dir":"Reference","previous_headings":"","what":"Liftover GWAS positions — lift","title":"Liftover GWAS positions — lift","text":"Determine GWAS build liftover required build. function GwasDataImport package, difference can specify build rather trying guess build (fails trying liftover small segments genome).","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/lift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liftover GWAS positions — lift","text":"","code":"lift(   gwas,   from = \"Hg19\",   to = \"Hg38\",   snp_col = \"snp\",   chr_col = \"chr\",   pos_col = \"pos\",   ea_col = \"ea\",   oa_col = \"oa\",   remove_duplicates = TRUE )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/lift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liftover GWAS positions — lift","text":"gwas data.table, file path, chr, pos, snp name, effect allele, non-effect allele columns build lift , one c(\"Hg18\", \"Hg19\", \"Hg38\") build lift , one c(\"Hg18\", \"Hg19\", \"Hg38\") snp_col Name SNP column name. Optional. Uses less certain method matching available chr_col Name chromosome column name. Required pos_col Name position column name. Required ea_col Name effect allele column name. Optional. Might lead duplicated rows presented oa_col Name allele column name. Optional. Might lead duplicated rows presented remove_duplicates logical, whether remove duplicate IDs","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/lift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Liftover GWAS positions — lift","text":"data.table updated position columns","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/lift.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Liftover GWAS positions — lift","text":"https://github.com/MRCIEU/GwasDataImport","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"Manhattan plot — manhattan","title":"Manhattan plot — manhattan","text":"Create Manhattan plot ggplot2 geom_point.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manhattan plot — manhattan","text":"","code":"manhattan(   gwas,   highlight_snps = NULL,   highlight_win = 100,   annotate_snps = NULL,   colours = c(\"#d9d9d9\", \"#bfbfbf\"),   highlight_colour = \"#e15758\",   highlight_shape = 16,   highlight_alpha = 1,   sig_line_1 = 5e-08,   sig_line_2 = NULL,   y_limits = c(NULL, NULL),   title = NULL,   subtitle = NULL,   base_text_size = 14,   hit_table = FALSE,   max_table_hits = 10,   downsample = 0.9,   downsample_pval = 0.7 )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/manhattan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manhattan plot — manhattan","text":"gwas data.table minimum columns SNP, CHR, BP, P highlight_snps (optional) character vector SNPs highlight highlight_win (optional) numeric, number kb either side highlight_snps also highlight (.e create peaks) annotate_snps (optional) character vector SNPs annotate colours (optional) character vector colour codes replicated along chromosomes highlight_colour (optional) character colour code; colour highlight points highlight_shape (optional) numeric shape code; shape highlight points (see ggplot2 shape codes) highlight_alpha (optional) numeric value 0 1; alpha highlighted points colour sig_line_1 (optional) numeric value (-log10(P)) draw horizontal line sig_line_2 (optional) numeric value (-log10(P)) draw second horizontal line y_limits (optional) numeric length 2 vector c(min-Y, max-Y) title (optional) string title subtitle (optional) string subtitle base_text_size integer, base_size ggplot2 theme hit_table (optional) logical, whether display table top hits (lowest P values) max_table_hits (optional) integer, many top hits show table downsample (optional) numeric 0 1, proportion downsample , e.g. 0.6 remove 60% points downsample_pval threshold (can help increase plotting speed minimal impact plot appearance) downsample_pval (optional) numeric 0 1, p-values affected downsampling, default >0.1","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/manhattan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manhattan plot — manhattan","text":"ggplot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/miami.html","id":null,"dir":"Reference","previous_headings":"","what":"Miami plot — miami","title":"Miami plot — miami","text":"Create Miami plot. Please look carefully parameters largely map manhattan() parameters, main difference need supply 2 element list parameter, one upper one lower plot aspect Miami plot. parameters duplicated however - see example defaults .","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/miami.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Miami plot — miami","text":"","code":"miami(   gwases,   highlight_snps = list(top = NULL, bottom = NULL),   highlight_win = list(top = 100, bottom = 100),   annotate_snps = list(top = NULL, bottom = NULL),   colours = list(top = c(\"#d9d9d9\", \"#bfbfbf\"), bottom = c(\"#bfbfbf\", \"#d9d9d9\")),   highlight_colour = list(top = \"#e15758\", bottom = \"#4f79a7\"),   highlight_shape = list(top = 16, bottom = 16),   sig_line_1 = list(top = 5e-08, bottom = 5e-08),   sig_line_2 = list(top = NULL, bottom = NULL),   y_limits = list(top = c(NULL, NULL), bottom = c(NULL, NULL)),   title = NULL,   subtitle = list(top = NULL, bottom = NULL),   base_text_size = 14,   hit_table = FALSE,   max_table_hits = 10,   downsample = 0.1,   downsample_pval = 0.1 )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/miami.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Miami plot — miami","text":"gwases list 2 data.tables highlight_snps (optional) character vector SNPs highlight highlight_win (optional) numeric, number kb either side highlight_snps also highlight (.e create peaks) annotate_snps (optional) character vector SNPs annotate colours (optional) character vector colour codes replicated along chromosomes highlight_colour (optional) character colour code; colour highlight points highlight_shape (optional) numeric shape code; shape highlight points (see ggplot2 shape codes) sig_line_1 (optional) numeric value (-log10(P)) draw horizontal line sig_line_2 (optional) numeric value (-log10(P)) draw second horizontal line y_limits (optional) numeric length 2 vector c(min-Y, max-Y) title (optional) string title subtitle (optional) string subtitle base_text_size integer, base_size ggplot2 theme hit_table (optional) logical, whether display table top hits (lowest P values) max_table_hits (optional) integer, many top hits show table downsample (optional) numeric 0 1, proportion downsample , e.g. 0.6 remove 60% points downsample_pval threshold (can help increase plotting speed minimal impact plot appearance) downsample_pval (optional) numeric 0 1, p-values affected downsampling, default >0.1","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/miami.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Miami plot — miami","text":"ggplot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_egger.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Egger MR — mr_egger","title":"Run Egger MR — mr_egger","text":"Run Egger MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_egger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Egger MR — mr_egger","text":"","code":"mr_egger(x, corr = FALSE, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_egger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Egger MR — mr_egger","text":"x object class MR corr logical, whether use correlation matrix running MR ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_ivw.html","id":null,"dir":"Reference","previous_headings":"","what":"Run IVW MR — mr_ivw","title":"Run IVW MR — mr_ivw","text":"Run IVW MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_ivw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run IVW MR — mr_ivw","text":"","code":"mr_ivw(x, corr = FALSE, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_ivw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run IVW MR — mr_ivw","text":"x object class MR corr logical, whether use correlation matrix running MR ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_pcgmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PC-GMM MR — mr_pcgmm","title":"Run PC-GMM MR — mr_pcgmm","text":"Run PC-GMM MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_pcgmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PC-GMM MR — mr_pcgmm","text":"","code":"mr_pcgmm(x, corr = TRUE, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_pcgmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PC-GMM MR — mr_pcgmm","text":"x object class MR corr logical, whether use correlation matrix running MR ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_results_to_data_table.html","id":null,"dir":"Reference","previous_headings":"","what":"MR results to data.table — mr_results_to_data_table","title":"MR results to data.table — mr_results_to_data_table","text":"MR results data.table","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_results_to_data_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MR results to data.table — mr_results_to_data_table","text":"","code":"mr_results_to_data_table(x)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_results_to_data_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MR results to data.table — mr_results_to_data_table","text":"x MRResult object covert data.table","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Run weighted median MR — mr_weighted_median","title":"Run weighted median MR — mr_weighted_median","text":"Run weighted median MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run weighted median MR — mr_weighted_median","text":"","code":"mr_weighted_median(x, corr = FALSE, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run weighted median MR — mr_weighted_median","text":"x object class MR corr logical, whether use correlation matrix running MR ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Run weighted mode MR — mr_weighted_mode","title":"Run weighted mode MR — mr_weighted_mode","text":"Run weighted mode MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run weighted mode MR — mr_weighted_mode","text":"","code":"mr_weighted_mode(x, corr = FALSE, ...)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/mr_weighted_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run weighted mode MR — mr_weighted_mode","text":"x object class MR corr logical, whether use correlation matrix running MR ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_coloc_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Coloc probability plot — plot_coloc_probabilities","title":"Coloc probability plot — plot_coloc_probabilities","text":"plotting wrapper coloc package. Produces ggplot either prior posterior probability sensitivity analyses. See coloc package vignettes details.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_coloc_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coloc probability plot — plot_coloc_probabilities","text":"","code":"plot_coloc_probabilities(coloc, rule = \"H4 > 0.5\", type = \"prior\", row = 1)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_coloc_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coloc probability plot — plot_coloc_probabilities","text":"coloc coloc object, output coloc::coloc.abf() rule string, valid rule indicating success e.g. \"H4 > 0.5\" type string, either prior posterior row integer, row coloc.susie coloc.signals object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_coloc_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coloc probability plot — plot_coloc_probabilities","text":"ggplot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_coloc_probabilities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coloc probability plot — plot_coloc_probabilities","text":"coloc","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_mr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MR results — plot_mr","title":"Plot MR results — plot_mr","text":"Plot MR results","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_mr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MR results — plot_mr","text":"","code":"plot_mr(mr, res)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/plot_mr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MR results — plot_mr","text":"mr object class MR res data.table output run_mr MR methods","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/qq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"QQ plot — qq_plot","title":"QQ plot — qq_plot","text":"QQ plot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/qq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QQ plot — qq_plot","text":"","code":"qq_plot(   gwas,   pval_col = \"p\",   colours = list(raw = \"#2166AC\"),   title = NULL,   subtitle = NULL,   plot_corrected = FALSE,   facet_grid_row_col = NULL,   facet_grid_col_col = NULL,   facet_nrow = NULL,   facet_ncol = NULL )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/qq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QQ plot — qq_plot","text":"gwas data.frame like object valid file path pval_col P value column colours 2 element list colour codes (1-uncorrected points, 2-GC corrected points) title string, title plot subtitle string, subtitle plot plot_corrected logical, whether apply plot lambda correction facet_grid_row_col string, column name gwas facet plot (rows) facet_grid_col_col string, column name gwas facet plot (cols) facet_nrow integer, passed facet_wrap, number rows facet (facet_grid_row_col provided) facet_ncol integer, passed facet_wrap, number cols facet (facet_grid_col_col provided)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/qq_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QQ plot — qq_plot","text":"ggplot","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/reset_index_snp.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset index SNP — reset_index_snp","title":"Reset index SNP — reset_index_snp","text":"Reset index SNP","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/reset_index_snp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset index SNP — reset_index_snp","text":"","code":"reset_index_snp(x)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/reset_index_snp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset index SNP — reset_index_snp","text":"x object class MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/run_mr.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MR — run_mr","title":"Run MR — run_mr","text":"Run MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/run_mr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MR — run_mr","text":"","code":"run_mr(   x,   corr = FALSE,   methods = c(\"mr_ivw\", \"mr_egger\", \"mr_weighted_median\", \"mr_weighted_mode\"),   ... )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/run_mr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MR — run_mr","text":"x object class MR corr logical, whether use correlation matrix running MR methods string, one c('mr_ivw','mr_egger','mr_weighted_median','mr_weighted_mode', 'mr_pcgmm') ... parameter sink, used","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_1000G_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the 1000G reference path — set_1000G_reference","title":"Set the 1000G reference path — set_1000G_reference","text":"Set 1000G reference path","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_1000G_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the 1000G reference path — set_1000G_reference","text":"","code":"set_1000G_reference(path, build = \"GRCh37\")"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_1000G_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the 1000G reference path — set_1000G_reference","text":"path path 1000G reference pfile build one c(\"GRCh37\", \"GRCh38\")","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_1000G_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the 1000G reference path — set_1000G_reference","text":"NULL, updated config file","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_dbsnp_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Set dbSNP directory — set_dbsnp_directory","title":"Set dbSNP directory — set_dbsnp_directory","text":"Set dbSNP directory","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_dbsnp_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set dbSNP directory — set_dbsnp_directory","text":"","code":"set_dbsnp_directory(path)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_dbsnp_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set dbSNP directory — set_dbsnp_directory","text":"path path dbsnp directory","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_dbsnp_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set dbSNP directory — set_dbsnp_directory","text":"NULL, updated config file","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_ld_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the LD matrix — set_ld_mat","title":"Set the LD matrix — set_ld_mat","text":"Set LD matrix","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_ld_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the LD matrix — set_ld_mat","text":"","code":"set_ld_mat(x, correlation)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_ld_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the LD matrix — set_ld_mat","text":"x object class MR correlation matrix, correlation ('r') matrix","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_plink2.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the PLINK2 path — set_plink2","title":"Set the PLINK2 path — set_plink2","text":"Set PLINK2 path","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_plink2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the PLINK2 path — set_plink2","text":"","code":"set_plink2(path)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_plink2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the PLINK2 path — set_plink2","text":"path path PLINK2 executable","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/set_plink2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the PLINK2 path — set_plink2","text":"NULL, updated config file","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/slopehunter.html","id":null,"dir":"Reference","previous_headings":"","what":"Slope-Hunter collider bias method — slopehunter","title":"Slope-Hunter collider bias method — slopehunter","text":"Slope-Hunter collider bias method","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/slopehunter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slope-Hunter collider bias method — slopehunter","text":"","code":"slopehunter(   x,   ip = 0.001,   pi0 = 0.6,   sxy1 = 1e-05,   bootstraps = 100,   seed = 777 )"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/slopehunter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slope-Hunter collider bias method — slopehunter","text":"x object class MR ip see xp_thresh SlopeHunter::hunt() pi0 see init_pi SlopeHunter::hunt() sxy1 see init_sigmaIP SlopeHunter::hunt() bootstraps see M SlopeHunter::hunt() seed see seed SlopeHunter::hunt()","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/slopehunter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slope-Hunter collider bias method — slopehunter","text":"object class MRResult","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/subset_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"subset_gwas — subset_gwas","title":"subset_gwas — subset_gwas","text":"subset_gwas","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/subset_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset_gwas — subset_gwas","text":"","code":"subset_gwas(x, snps)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/subset_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset_gwas — subset_gwas","text":"x GWAS object snps vector, either row indicies (integers) GWAS object (e.g. obtained filters (GWAS''p < 5e-8), rsids (characters) found GWAS rsid slot.","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/subset_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"subset_gwas — subset_gwas","text":"GWAS object subsetted snps","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to MendelianRandomization::MRInput object — to_MRInput","title":"Convert to MendelianRandomization::MRInput object — to_MRInput","text":"Convert MendelianRandomization::MRInput object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to MendelianRandomization::MRInput object — to_MRInput","text":"","code":"to_MRInput(x, corr = FALSE)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to MendelianRandomization::MRInput object — to_MRInput","text":"x object class MR corr logical, whether use correlation matrix running MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRMVInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to MendelianRandomization::MRMVInput object — to_MRMVInput","title":"Convert to MendelianRandomization::MRMVInput object — to_MRMVInput","text":"Convert MendelianRandomization::MRMVInput object","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRMVInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to MendelianRandomization::MRMVInput object — to_MRMVInput","text":"","code":"to_MRMVInput(x, corr = FALSE)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/to_MRMVInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to MendelianRandomization::MRMVInput object — to_MRMVInput","text":"x object class MR corr logical, whether use correlation matrix running MR","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_1000G_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 1000G reference path(s) — which_1000G_reference","title":"Get 1000G reference path(s) — which_1000G_reference","text":"Get 1000G reference path(s)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_1000G_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 1000G reference path(s) — which_1000G_reference","text":"","code":"which_1000G_reference(build = NULL)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_1000G_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 1000G reference path(s) — which_1000G_reference","text":"build one \"GRCh37\" \"GRCh38\", null return ","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_1000G_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 1000G reference path(s) — which_1000G_reference","text":"string file path, currently set 1000G reference path","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_builds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available dbSNP builds — which_dbsnp_builds","title":"Get available dbSNP builds — which_dbsnp_builds","text":"Get available dbSNP builds","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_builds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available dbSNP builds — which_dbsnp_builds","text":"","code":"which_dbsnp_builds(build = NULL)"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_builds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available dbSNP builds — which_dbsnp_builds","text":"build dbSNP build","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_builds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available dbSNP builds — which_dbsnp_builds","text":"list available dbSNP builds - name(dbSNP build): value(directory_path)","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dbSNP directory — which_dbsnp_directory","title":"Get dbSNP directory — which_dbsnp_directory","text":"Get dbSNP directory","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dbSNP directory — which_dbsnp_directory","text":"","code":"which_dbsnp_directory()"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_dbsnp_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dbSNP directory — which_dbsnp_directory","text":"string file path, currently set dbSNP directory path","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_plink2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get plink2 path — which_plink2","title":"Get plink2 path — which_plink2","text":"Get plink2 path","code":""},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_plink2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get plink2 path — which_plink2","text":"","code":"which_plink2()"},{"path":"https://nicksunderland.github.io/genepi.utils/reference/which_plink2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get plink2 path — which_plink2","text":"string file path, currently set plink2 path","code":""}]
