% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardise_gwas.R
\name{standardise_gwas}
\alias{standardise_gwas}
\title{Standardise GWAS format}
\usage{
standardise_gwas(
  gwas,
  input_format = "default",
  drop = FALSE,
  fill = FALSE,
  build = "GRCh37",
  populate_rsid = FALSE,
  filters = list(BETA_invalid = "!is.infinite(BETA) & abs(BETA) < 20", P_invalid =
    "!is.infinite(P)", SE_invalid = "!is.infinite(SE)", CHR_missing = "!is.na(CHR)",
    BP_missing = "!is.na(BP)", BETA_missing = "!is.na(BETA)", SE_missing = "!is.na(SE)",
    P_missing = "!is.na(P)", EAF_missing = "!is.na(EAF)")
)
}
\arguments{
\item{gwas}{a string file path, or data.frame like object}

\item{input_format}{a string or list(); if string, must be a valid format - these can be obtained with \code{input_formats(ColumnMapping())}}

\item{drop}{a logical, whether to drop additional columns not in the input_format mapping}

\item{fill}{a logical, whether to add (NAs) missing columns present in the mapping but not present in the GWAS}

\item{build}{a string, one of GRCh37 or GRCh38}

\item{populate_rsid}{either FALSE or a valid argument for chrpos_to_rsid \code{build}, e.g. b37_dbsnp156}

\item{filters}{a named list of conditions (as strings) to be evaluated as data.table row filters (quoting column names not necessary).
These must be positive assertions, i.e. resolve to TRUE to keep the row. If filters==NULL, no filtering occurs. Example:
\code{filters=list('abs(BETA)<10', 'EAF>0.01 & EAF<0.99')} ...will filter for rows with BETA value between -10 and +10 and EAF between
1\% and 99\%.}
}
\value{
a standardised data.table
}
\description{
Standardises a GWAS with appropriate column names and data checks.
}
