% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_gwas.R
\name{GWAS}
\alias{GWAS}
\title{GWAS object}
\usage{
GWAS(
  dat,
  map = "default",
  drop = FALSE,
  fill = FALSE,
  fill_rsid = FALSE,
  missing_rsid = "fill_CHR:BP",
  parallel_cores = parallel::detectCores(),
  filters = list(beta_invalid = "!is.infinite(beta) & abs(beta) < 20", eaf_invalid =
    "eaf > 0 & eaf < 1", p_invalid = "!is.infinite(p)", se_invalid = "!is.infinite(se)",
    chr_missing = "!is.na(chr)", bp_missing = "!is.na(bp)", beta_missing =
    "!is.na(beta)", se_missing = "!is.na(se)", p_missing = "!is.na(p)", eaf_missing =
    "!is.na(eaf)"),
  reference = NULL,
  ref_map = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{dat}{a valid string file path to be read by \code{data.table::fread} or a \code{data.table::data.table} object; the GWAS data source}

\item{map}{a valid input to the \code{ColumnMap} class constructor (a predefined map id \link{string}, a named list or character vector, or a ColumMap object)}

\item{drop}{a logical, whether to drop data source columns not in the column \code{map}}

\item{fill}{a logical, whether to add (NAs) missing columns present in the column \code{map} but not present in the data source}

\item{fill_rsid}{either FALSE or a valid argument for the chrpos_to_rsid \code{build} argument, e.g. "b37_dbsnp156"}

\item{missing_rsid}{a string, how to handle missing rsids: one of "fill_CHR:BP", "fill_CHR:BP_OA_EA", "overwrite_CHR:BP",
"overwrite_CHR:BP:OA:EA", "none", or "leave"}

\item{parallel_cores}{an integer, number of cores to used for RSID mapping, default is maximum machine cores}

\item{filters}{a list of named strings, each to be evaluated as an expression to filter the data during the quality control steps (above)}

\item{reference}{a valid string file path to be read by \code{data.table::fread} or a \code{data.table::data.table} object; the reference data}

\item{ref_map}{a valid input to the \code{ColumnMap} class constructor (a predefined map id \link{string}, a named list or character vector, or a
ColumMap object) defining at least columns \code{rsid} (or \code{chr}, \code{bp}), \code{ea}, \code{oa} and \code{eaf}.}
}
\value{
an S7 class genepi.utils::GWAS object
}
\description{
A GWAS object is a container for vectors of GWAS data, a correlation matrix, and
meta-data regarding quality control procedures applied at the point of object creation / data import. \cr\cr
\strong{Quality control steps:}
\tabular{rr}{
\strong{Step} \tab \strong{Description} \cr
Column mapping \tab Column name mapping using the \code{ColumnMap} and \code{Column} classes which define standard column names and a list
of aliases. The set of core data fields are: \code{rsid}, \code{chr}, \code{bp}, \code{ea}, \code{oa}, \code{eaf}, \code{beta}, \code{se}, \code{p}, and \code{n}. \cr
Column typing \tab Column types are enforced using the \code{ColumnMap} and \code{Column} classes which define standard column types (see
return value table below). \cr
Standardise columns \tab Core data fields are checked, if absent, they are calculated from the available data if possible. The
current conversions include: \emph{chr} and \emph{bp} extration from \emph{rsid} column containing \emph{chr:pos +/- allele} id coding;
conversion of odds ratio \emph{or} and odds ratio standard error / upper and lower bounds \emph{or_se/or_ub/or_lb} to \emph{beta} and
\emph{se}; and conversion of \emph{z} scores to \emph{p} values. \cr
Standardise allele coding \tab Alleles are standardised to upper case \emph{ACTGDI} or combination of these letters. \code{NA} values
are allowed in one of the \emph{ea} or \emph{oa} fields, but not both, where it is taken to represent a deletion. \cr
Reference harmonisation \tab TODO: harmonising against a reference panel is an important step, however has not yet been implemented
for this class constructor (under active development). \cr
Filters \tab Custom filters can be added to the \code{filters} argument. This should be a list of named string that can be evaluated as R
expressions and when applied to the standard column names result in a logical vector mask of the rows to \emph{keep}. The defaults are:
\itemize{
\item{beta_invalid} = {"!is.infinite(beta) & abs(beta) < 20"}
\item{eaf_invalid} = {"eaf > 0 & eaf < 1"}
\item{p_invalid} = {"!is.infinite(p)"}
\item{se_invalid} = {"!is.infinite(se)"}
\item{chr_missing} = {"!is.na(chr)"}
\item{bp_missing} = {"!is.na(bp)"}
\item{beta_missing} = {"!is.na(beta)"}
\item{se_missing} = {"!is.na(se)"}
\item{p_missing} = {"!is.na(p)"}
\item{eaf_missing} = {"!is.na(eaf)"}
}
}
}
\section{Slots}{

\describe{
\item{\code{rsid}}{character, variant ID - usually in rs12345 format, however this can be changed with the \code{missing_rsid} argument}

\item{\code{chr}}{character, chromosome identifier}

\item{\code{bp}}{integer, base position}

\item{\code{ea}}{character, effect allele}

\item{\code{oa}}{character, other allele}

\item{\code{eaf}}{numeric, effect allele frequency}

\item{\code{beta}}{numeric, effect size}

\item{\code{se}}{numeric, effect size standard error}

\item{\code{p}}{numeric, p-value}

\item{\code{n}}{integer, total number of samples}

\item{\code{ncase}}{integer, number of cases}

\item{\code{trait}}{character, the GWAS trait}

\item{\code{id}}{character, the GWAS identifier}

\item{\code{source}}{character, data source; either the file path, or "data.table" if loaded directly}

\item{\code{correlation}}{matrix, a correlation matrix of signed R values between variants}

\item{\code{map}}{\code{ColumnMap}, a mapping of class ColumnMap}

\item{\code{qc}}{list, a named list of filters; name is the filter expression and value is an integer vector of rows that fail the filter}
}}

